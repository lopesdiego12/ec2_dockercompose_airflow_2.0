{
  "version": 4,
  "terraform_version": "0.14.3",
  "serial": 31,
  "lineage": "6d72d222-6be5-c4c3-5cf7-c69cf3e6ba8c",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "template_file",
      "name": "user_data",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "cc3e62c161901f6ff1902448c42bd7c150debcf725ded9da45a6f5ae5e8a46e3",
            "rendered": "#!/bin/bash\r\n# Send the log output from this script to user-data.log, syslog, and the console\r\n# From: https://alestic.com/2010/12/ec2-user-data-output/\r\nexec \u003e \u003e(tee /var/log/user-data.log|logger -t user-data -s 2\u003e/dev/console) 2\u003e\u00261\r\n\r\n# Update Ubuntu\r\napt-get update -y\r\n\r\n# Install Docker\r\napt install -y \\\r\n    apt-transport-https \\\r\n    ca-certificates \\\r\n    curl \\\r\n    gnupg-agent \\\r\n    software-properties-common\r\n\r\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -\r\nadd-apt-repository \\\r\n   \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\r\n   $(lsb_release -cs) \\\r\n   stable\"\r\n\r\napt update -y\r\napt install -y docker-ce docker-ce-cli containerd.io\r\nusermod -aG docker ubuntu\r\n\r\n# Install Docker-Compose\r\nsudo curl -L \"https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\r\nchmod +x /usr/local/bin/docker-compose\r\nln -s /usr/local/bin/docker-compose /usr/bin/docker-compose\r\nsystemctl enable docker\r\ncurl -Lfo /home/ubuntu/docker-compose.yaml 'https://raw.githubusercontent.com/lopesdiego12/Wiki/master/airflow_datasprints_2.yaml' \r\nmkdir /home/ubuntu/dags /home/ubuntu/logs /home/ubuntu/plugins\r\n# Permissions\r\nchmod -R 777 /home/ubuntu/dags\r\nchmod -R 777 /home/ubuntu/logs\r\nchmod -R 777 /home/ubuntu/plugins\r\n# Env (On Linux, the mounted volumes in container use the native Linux filesystem user/group permissions, so you have to make sure the container and host computer have matching file permissions.)\r\necho -e \"AIRFLOW_UID=50000\\nAIRFLOW_GID=50000\" \u003e\u003e .env\r\nsleep 10\r\n# Airflow init\r\ndocker-compose -f /home/ubuntu/docker-compose.yaml up airflow-init \r\nsleep 40\r\n# On all operating system, you need to run database migrations and create the first user account.\r\ndocker-compose -f /home/ubuntu/docker-compose.yaml up -d\r\n\r\n###https://airflow.apache.org/docs/apache-airflow/stable/start/docker.html?highlight=compose",
            "template": "#!/bin/bash\r\n# Send the log output from this script to user-data.log, syslog, and the console\r\n# From: https://alestic.com/2010/12/ec2-user-data-output/\r\nexec \u003e \u003e(tee /var/log/user-data.log|logger -t user-data -s 2\u003e/dev/console) 2\u003e\u00261\r\n\r\n# Update Ubuntu\r\napt-get update -y\r\n\r\n# Install Docker\r\napt install -y \\\r\n    apt-transport-https \\\r\n    ca-certificates \\\r\n    curl \\\r\n    gnupg-agent \\\r\n    software-properties-common\r\n\r\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -\r\nadd-apt-repository \\\r\n   \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\r\n   $(lsb_release -cs) \\\r\n   stable\"\r\n\r\napt update -y\r\napt install -y docker-ce docker-ce-cli containerd.io\r\nusermod -aG docker ubuntu\r\n\r\n# Install Docker-Compose\r\nsudo curl -L \"https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\r\nchmod +x /usr/local/bin/docker-compose\r\nln -s /usr/local/bin/docker-compose /usr/bin/docker-compose\r\nsystemctl enable docker\r\ncurl -Lfo /home/ubuntu/docker-compose.yaml 'https://raw.githubusercontent.com/lopesdiego12/Wiki/master/airflow_datasprints_2.yaml' \r\nmkdir /home/ubuntu/dags /home/ubuntu/logs /home/ubuntu/plugins\r\n# Permissions\r\nchmod -R 777 /home/ubuntu/dags\r\nchmod -R 777 /home/ubuntu/logs\r\nchmod -R 777 /home/ubuntu/plugins\r\n# Env (On Linux, the mounted volumes in container use the native Linux filesystem user/group permissions, so you have to make sure the container and host computer have matching file permissions.)\r\necho -e \"AIRFLOW_UID=50000\\nAIRFLOW_GID=50000\" \u003e\u003e .env\r\nsleep 10\r\n# Airflow init\r\ndocker-compose -f /home/ubuntu/docker-compose.yaml up airflow-init \r\nsleep 40\r\n# On all operating system, you need to run database migrations and create the first user account.\r\ndocker-compose -f /home/ubuntu/docker-compose.yaml up -d\r\n\r\n###https://airflow.apache.org/docs/apache-airflow/stable/start/docker.html?highlight=compose",
            "vars": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "instance",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "ami": "ami-042e8287309f5df03",
            "arn": "arn:aws:ec2:us-east-1:038715283734:instance/i-0c230c13c2d9818ed",
            "associate_public_ip_address": true,
            "availability_zone": "us-east-1f",
            "cpu_core_count": 2,
            "cpu_threads_per_core": 1,
            "credit_specification": [
              {
                "cpu_credits": "standard"
              }
            ],
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": null,
            "iam_instance_profile": "",
            "id": "i-0c230c13c2d9818ed",
            "instance_initiated_shutdown_behavior": null,
            "instance_state": "running",
            "instance_type": "t2.medium",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "diego",
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "network_interface_id": null,
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "primary_network_interface_id": "eni-05948cc1dd0bbbaf0",
            "private_dns": "ip-172-31-64-233.ec2.internal",
            "private_ip": "172.31.64.233",
            "public_dns": "ec2-3-215-22-22.compute-1.amazonaws.com",
            "public_ip": "3.215.22.22",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/sda1",
                "encrypted": false,
                "iops": 100,
                "kms_key_id": "",
                "volume_id": "vol-06959fc603568c301",
                "volume_size": 8,
                "volume_type": "gp2"
              }
            ],
            "security_groups": [
              "acesso-externo-airflow",
              "acesso-ssh-airflow"
            ],
            "source_dest_check": true,
            "subnet_id": "subnet-de9fafd1",
            "tags": {
              "Name": "airflow"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "823a62e542ada038a15d362e04e4d326ce70d899",
            "user_data_base64": null,
            "volume_tags": {},
            "vpc_security_group_ids": [
              "sg-0269e702d9789fa87",
              "sg-0bfd95b7cd9321f03"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "aws_security_group.acesso-externo-airflow",
            "aws_security_group.acesso-ssh-airflow",
            "data.template_file.user_data"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "acesso-externo-airflow",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:038715283734:security-group/sg-0bfd95b7cd9321f03",
            "description": "acesso-externo-airflow",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "HTTP",
                "from_port": 80,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 80
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "HTTPS",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 443
              }
            ],
            "id": "sg-0bfd95b7cd9321f03",
            "ingress": [],
            "name": "acesso-externo-airflow",
            "name_prefix": null,
            "owner_id": "038715283734",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "http/https"
            },
            "timeouts": null,
            "vpc_id": "vpc-275ad05d"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "acesso-ssh-airflow",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:038715283734:security-group/sg-0269e702d9789fa87",
            "description": "acesso-ssh",
            "egress": [],
            "id": "sg-0269e702d9789fa87",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "acesso-ssh-airflow",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "airflow",
                "from_port": 8080,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 8080
              }
            ],
            "name": "acesso-ssh-airflow",
            "name_prefix": null,
            "owner_id": "038715283734",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "ssh"
            },
            "timeouts": null,
            "vpc_id": "vpc-275ad05d"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0="
        }
      ]
    }
  ]
}
